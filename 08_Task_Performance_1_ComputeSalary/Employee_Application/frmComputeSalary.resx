<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>